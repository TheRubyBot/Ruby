var d=Object.defineProperty;var o=(e,i)=>d(e,"name",{value:i,configurable:!0});var a=require("dotenv");var f=require("@prisma/client"),D=require("path"),g=require("discord.js");var t=class extends Error{constructor(...i){super(...i);this.name="RUBY:ERROR"}};o(t,"RubyError");var m=require("path"),p=require("fs"),c=o((e,i)=>{let l=(0,p.readdirSync)(e,{withFileTypes:!0}).filter(n=>i.ignoreDot&&!n.name.startsWith(".")),r=[];for(let n of l)n.isDirectory()?r=[...r,...c((0,m.join)(e,n.name),i)]:r.push((0,m.join)(e,n.name));return r},"readDir");var s=class{constructor(i){this.client=new g.Client({intents:["GUILDS","GUILD_MESSAGES","GUILD_MEMBERS"]});this.prisma=new f.PrismaClient;this.isDev=o(()=>process.env.NODE_ENV==="DEVELOPMENT","isDev");if(this.client.on("ready",()=>{console.log(`Logged in as ${this.client.user.tag}`),this.client.user.setPresence({activities:[{name:"I'm alive!"}]})}),this.commandsDir=i.commandsDir,require.main){let{path:r}=require.main;r&&(this.commandsDir=(0,D.join)(r,this.commandsDir))}let l=c(this.commandsDir,{ignoreDot:!0})}login(i){if(!i)throw new t("No token provided");this.client.login(i).catch(()=>{throw new t("Invalid token")})}};o(s,"Bot");switch(process.env.NODE_ENV){case"PRODUCTION":(0,a.config)();break;case"DEV":(0,a.config)({path:"local.env"});break}var h=new s({commandsDir:"commands"});h.login(process.env.TOKEN);
//# sourceMappingURL=index.js.map
