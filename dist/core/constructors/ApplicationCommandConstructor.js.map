{
  "version": 3,
  "sources": ["../../../src/core/constructors/ApplicationCommandConstructor.ts"],
  "sourcesContent": ["import { PrismaClient } from \"@prisma/client\";\nimport { CommandInteraction } from \"discord.js\";\nimport { Option, OptionBuilder } from \"./OptionBuilder\";\n\ntype ApplicationCommandCallback = (\n  this: CommandInteraction,\n  { prisma }: { prisma: PrismaClient }\n) => void;\n\ninterface IApplicationCommand {\n  readonly name: string;\n  readonly description: string;\n  readonly options: OptionBuilder | Option[] | null;\n  readonly callback: ApplicationCommandCallback;\n}\n\nexport class ApplicationCommand implements IApplicationCommand {\n  constructor(\n    public name: string,\n    public description: string,\n    public options: OptionBuilder | Option[],\n    public callback: ApplicationCommandCallback\n  ) {\n    if (!name) throw new Error(\"Name of Application Commands are required\");\n    else if (!description)\n      throw new Error(`Description of Application Command \"${name}\" is missing.`);\n    else if (\"options\" in options) options = options.options;\n  }\n}\n"],
  "mappings": "8gBAAA,yCAgBO,MAAM,CAAkD,CAC7D,YACS,EACA,EACA,EACA,EACP,CAJO,YACA,mBACA,eACA,gBAEP,GAAK,EACA,GAAK,EAEL,AAAI,WAAa,IAAS,GAAU,EAAQ,aAD/C,MAAM,IAAI,OAAM,uCAAuC,gBAAmB,MAFjE,MAAM,IAAI,OAAM,2CAA2C,CAIxE,CACF",
  "names": []
}
