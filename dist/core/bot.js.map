{
  "version": 3,
  "sources": ["../../src/core/bot.ts"],
  "sourcesContent": ["import { Client } from \"discord.js\";\nimport ora, { Ora } from \"ora\";\nimport { PrismaClient } from \"@prisma/client\";\n\ninterface IBot {\n  readonly $client: Client;\n  readonly $prisma: PrismaClient;\n\n  login(token: string): Promise<Client | Error>;\n}\n\nexport class Bot implements IBot {\n  $client;\n  $prisma;\n\n  private readonly clientSpinner: Ora = ora(\"Starting client...\").start();\n  private readonly prismaSpinner: Ora = ora(\"Starting prisma...\").start();\n\n  constructor() {\n    this.$client = new Client({\n      intents: [\"GUILD_MESSAGES\", \"GUILD_MEMBERS\", \"GUILD_PRESENCES\", \"GUILDS\"]\n    });\n\n    this.$client.on(\"ready\", () => {\n      this.clientSpinner.succeed(`Logged in as ${this.$client.user!.tag}`);\n    });\n\n    this.$prisma = new PrismaClient();\n\n    this.$prisma.$connect().then(() => this.prismaSpinner.succeed(\"Prisma ready\"));\n  }\n\n  login(token: string): Promise<Client | Error> {\n    return new Promise<Client | Error>((resolve, reject) => {\n      this.$client.login(token).catch(reject);\n      resolve(this.$client);\n    });\n  }\n\n  get client(): Client {\n    return this.$client;\n  }\n}\n"],
  "mappings": "qrBAAA,gCAAuB,sBACvB,EAAyB,kBACzB,EAA6B,0BAStB,MAAM,CAAoB,CAO/B,aAAc,CAHG,mBAAqB,cAAI,oBAAoB,EAAE,MAAM,EACrD,mBAAqB,cAAI,oBAAoB,EAAE,MAAM,EAGpE,KAAK,QAAU,GAAI,UAAO,CACxB,QAAS,CAAC,iBAAkB,gBAAiB,kBAAmB,QAAQ,CAC1E,CAAC,EAED,KAAK,QAAQ,GAAG,QAAS,IAAM,CAC7B,KAAK,cAAc,QAAQ,gBAAgB,KAAK,QAAQ,KAAM,KAAK,CACrE,CAAC,EAED,KAAK,QAAU,GAAI,gBAEnB,KAAK,QAAQ,SAAS,EAAE,KAAK,IAAM,KAAK,cAAc,QAAQ,cAAc,CAAC,CAC/E,CAEA,MAAM,EAAwC,CAC5C,MAAO,IAAI,SAAwB,CAAC,EAAS,IAAW,CACtD,KAAK,QAAQ,MAAM,CAAK,EAAE,MAAM,CAAM,EACtC,EAAQ,KAAK,OAAO,CACtB,CAAC,CACH,IAEI,SAAiB,CACnB,MAAO,MAAK,OACd,CACF",
  "names": []
}
