var C=Object.create;var l=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var g=e=>l(e,"__esModule",{value:!0});var I=(e,i)=>{for(var t in i)l(e,t,{get:i[t],enumerable:!0})},n=(e,i,t,o)=>{if(i&&typeof i=="object"||typeof i=="function")for(let r of S(i))!E.call(e,r)&&(t||r!=="default")&&l(e,r,{get:()=>i[r],enumerable:!(o=P(i,r))||o.enumerable});return e},v=(e,i)=>n(g(l(e!=null?C(y(e)):{},"default",!i&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),M=(e=>(i,t)=>e&&e.get(i)||(t=n(g({}),i,1),e&&e.set(i,t),t))(typeof WeakMap!="undefined"?new WeakMap:0);var D=(e,i,t)=>new Promise((o,r)=>{var c=a=>{try{$(t.next(a))}catch(h){r(h)}},m=a=>{try{$(t.throw(a))}catch(h){r(h)}},$=a=>a.done?o(a.value):Promise.resolve(a.value).then(c,m);$((t=t.apply(e,i)).next())});var s={};I(s,{Bot:()=>B});var f=require("discord.js"),d=v(require("ora")),u=require("@prisma/client"),w=v(require("./util/getVersion")),p=require("path");n(s,require("./constructors/ApplicationCommandConstructor"));n(s,require("./constructors/OptionBuilder"));class B{constructor({commandsDir:i,eventsDir:t,owners:o,devMode:r}){this.version=(0,w.default)();this.$commandsDir="./commands";this.$eventsDir="./events";this.$owners=[];this.$devMode=!1;this.clientSpinner=(0,d.default)("Starting client...").start();this.prismaSpinner=(0,d.default)("Starting prisma...").start();this.$client=new f.Client({intents:["GUILD_MESSAGES","GUILD_MEMBERS","GUILD_PRESENCES","GUILDS"]}),this.$prisma=new u.PrismaClient,this.$prisma.$connect().then(()=>this.prismaSpinner.succeed("Prisma ready")),this.$client.on("ready",()=>D(this,null,function*(){this.setPresence(),this.clientSpinner.succeed(`Logged in as ${this.$client.user.tag}`),this.$client.user.setPresence({activities:[{name:`Using version ${this.version.string}`}]}),yield this.$client.application.fetch(),this.$owners.push(this.$client.application.owner.id)})),this.$commandsDir=i||this.$commandsDir,this.$eventsDir=t||this.$eventsDir,this.$devMode=r||this.$devMode;let c;require.main&&(c=require.main.path)&&(this.$commandsDir=(0,p.join)(c,this.$commandsDir),this.$eventsDir=(0,p.join)(c,this.$eventsDir));for(const m of o)this.$client.users.fetch(m).catch(()=>{throw new Error(`Owner ${m} does not exist.`)}),this.$owners.push(m)}setPresence(){this.$client.user.setPresence({activities:[{name:`Using version ${this.version.string}`}]})}login(i){return new Promise((t,o)=>{this.$client.login(i).catch(o),t(this.$client)})}get client(){return this.$client}get prisma(){return this.$prisma}}module.exports=M(s);0&&(module.exports={Bot});
//# sourceMappingURL=bot.js.map
